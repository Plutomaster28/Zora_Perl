name: Windows Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v1.2.3
    branches:
      - main  # Add this line
  workflow_dispatch:  # Allows manual triggering
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: UCRT64
        update: true
        install: >-
          mingw-w64-ucrt-x86_64-toolchain
          mingw-w64-ucrt-x86_64-cmake
          mingw-w64-ucrt-x86_64-ninja
          mingw-w64-ucrt-x86_64-qt6-base
          mingw-w64-ucrt-x86_64-qt6-multimedia
    
    - name: Build project
      shell: msys2 {0}
      run: |
        cd ZoraPerl_Onboarding
        mkdir -p build
        cd build
        cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release
        ninja
    
    - name: Prepare release package
      shell: pwsh
      run: |
        # Create release directory
        New-Item -ItemType Directory -Path "zora-perl-release" -Force
        
        # Copy the entire project structure (excluding .git and build folders)
        $sourceItems = Get-ChildItem -Path "." -Exclude @(".git", "*.zip", "zora-perl-release")
        foreach ($item in $sourceItems) {
          if ($item.Name -like "*build*" -and $item.PSIsContainer) {
            # Skip build directories but copy their parent structure
            $destPath = "zora-perl-release\$($item.Name)"
            New-Item -ItemType Directory -Path $destPath -Force
            
            # Copy non-build contents
            $subItems = Get-ChildItem -Path $item.FullName -Exclude "build"
            foreach ($subItem in $subItems) {
              Copy-Item -Path $subItem.FullName -Destination $destPath -Recurse -Force
            }
          }
          else {
            Copy-Item -Path $item.FullName -Destination "zora-perl-release\" -Recurse -Force
          }
        }
        
        Write-Host "‚úì Project structure copied"
    
    - name: Copy executable and dependencies
      shell: pwsh
      run: |
        # Copy the built executable to the onboarding directory
        $exePath = "ZoraPerl_Onboarding\build\ZoraPerl_Onboarding.exe"
        $destPath = "zora-perl-release\ZoraPerl_Onboarding\ZoraPerl_Onboarding.exe"
        
        if (Test-Path $exePath) {
          Copy-Item -Path $exePath -Destination $destPath -Force
          Write-Host "‚úì Executable copied to onboarding directory"
        }
        else {
          Write-Host "‚úó Executable not found at: $exePath"
          Get-ChildItem -Path "ZoraPerl_Onboarding\build\" -Recurse
          exit 1
        }
    
    - name: Copy Qt dependencies
      shell: msys2 {0}
      run: |
        # Get Qt dependencies
        echo "Copying Qt runtime libraries..."
        
        # Find Qt libraries in MSYS2
        QT_BIN_PATH="/ucrt64/bin"
        DEST_PATH="zora-perl-release/ZoraPerl_Onboarding"
        
        # Essential Qt libraries
        QT_LIBS=(
          "Qt6Core.dll"
          "Qt6Gui.dll"
          "Qt6Widgets.dll"
          "Qt6Multimedia.dll"
          "Qt6Network.dll"
        )
        
        # Copy Qt libraries
        for lib in "${QT_LIBS[@]}"; do
          if [ -f "$QT_BIN_PATH/$lib" ]; then
            cp "$QT_BIN_PATH/$lib" "$DEST_PATH/"
            echo "‚úì Copied $lib"
          else
            echo "‚ö† $lib not found"
          fi
        done
        
        # Copy essential system libraries
        SYSTEM_LIBS=(
          "libwinpthread-1.dll"
          "libgcc_s_seh-1.dll"
          "libstdc++-6.dll"
        )
        
        for lib in "${SYSTEM_LIBS[@]}"; do
          if [ -f "$QT_BIN_PATH/$lib" ]; then
            cp "$QT_BIN_PATH/$lib" "$DEST_PATH/"
            echo "‚úì Copied $lib"
          fi
        done
    
    - name: Create launch script and documentation
      shell: pwsh
      run: |
        # Create a simple run script
        $runScript = @'
        @echo off
        echo Starting ZoraPerl Onboarding...
        ZoraPerl_Onboarding.exe
        if %errorlevel% neq 0 (
            echo.
            echo An error occurred. Press any key to exit.
            pause >nul
        )
        '@
        
        $runScript | Out-File -FilePath "zora-perl-release\ZoraPerl_Onboarding\run.bat" -Encoding ASCII
        
        # Create README for the release
        $readme = @'
        # ZoraPerl Release Package
        
        ## Quick Start
        1. Extract this zip file to your desired location
        2. Navigate to the `ZoraPerl_Onboarding` folder
        3. Double-click `run.bat` or `ZoraPerl_Onboarding.exe` to start
        
        ## What's Included
        - **ZoraPerl_Onboarding/**: Setup wizard application
        - **ZoraPerl/**: Main system directory structure
        - **etc/**: Configuration files and samples
        
        ## Requirements
        - Windows 10/11 (64-bit)
        - No additional installation required - all dependencies included
        
        ## Directory Structure
        The setup wizard will automatically create the ZoraPerl system directories
        in the same location as this package when first run.
        '@
        
        $readme | Out-File -FilePath "zora-perl-release\RELEASE_README.md" -Encoding UTF8
        
        Write-Host "‚úì Launch script and documentation created"
    
    - name: Create ZIP package
      shell: pwsh
      run: |
        $version = "${{ github.ref_name }}" -replace '^refs/tags/', ''
        if ("${{ github.event_name }}" -eq "workflow_dispatch") {
          $version = "${{ github.event.inputs.version }}"
        }
        
        $zipName = "ZoraPerl-Windows-$version.zip"
        Compress-Archive -Path "zora-perl-release\*" -DestinationPath $zipName -Force
        
        # Get file size for release notes
        $zipSize = (Get-Item $zipName).Length
        $zipSizeMB = [math]::Round($zipSize / 1MB, 2)
        
        echo "RELEASE_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Append
        echo "ZIP_SIZE_MB=$zipSizeMB" | Out-File -FilePath $env:GITHUB_ENV -Append
        echo "ZIP_NAME=$zipName" | Out-File -FilePath $env:GITHUB_ENV -Append
        
        Write-Host "‚úì Created $zipName ($zipSizeMB MB)"
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.RELEASE_VERSION }}
        name: "ZoraPerl ${{ env.RELEASE_VERSION }} - Windows Release"
        files: |
          ${{ env.ZIP_NAME }}
        body: |
          ## ZoraPerl ${{ env.RELEASE_VERSION }} - Windows Release
          
          ### üì¶ What's New
          - Complete ZoraPerl system package
          - Setup wizard with smart directory detection
          - Automated configuration system
          
          ### üìã Package Contents
          - **Setup Wizard**: Complete onboarding experience
          - **System Structure**: Pre-configured ZoraPerl directories
          - **Configuration**: Sample configs and templates
          - **Runtime**: All required dependencies included
          
          ### üöÄ Quick Installation
          1. Download `${{ env.ZIP_NAME }}` (${{ env.ZIP_SIZE_MB }} MB)
          2. Extract to your preferred location
          3. Navigate to `ZoraPerl_Onboarding` folder
          4. Run `ZoraPerl_Onboarding.exe` or `run.bat`
          
          ### üíª System Requirements
          - Windows 10/11 (64-bit)
          - ~50MB free disk space
          - No additional software required
          
          ### üîß Features
          - **Smart Setup**: Automatic directory structure creation
          - **Configuration Management**: JSON-based settings
          - **User-Friendly**: Guided setup wizard
          - **Portable**: No installation required
          
          ---
          
          Built with Qt6 and love ‚ù§Ô∏è
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: zora-perl-windows-build
        path: |
          ZoraPerl_Onboarding/build/ZoraPerl_Onboarding.exe
          zora-perl-release/
        retention-days: 30